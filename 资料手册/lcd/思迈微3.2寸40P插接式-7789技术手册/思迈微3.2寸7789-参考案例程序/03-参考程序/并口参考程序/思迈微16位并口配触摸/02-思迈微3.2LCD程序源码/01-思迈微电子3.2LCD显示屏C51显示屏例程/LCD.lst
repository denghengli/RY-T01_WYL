C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: C:\Keil4\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) DEB
                    -UG OBJECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //////////////////////////////////////////////////////////////////////////////////   
   5          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   6          //测试硬件：单片机51  单片机工作电压3.3V
   7          //淘宝网站：https://shop73023976.taobao.com/?spm=2013.1.1000126.d21.dSpP3S
   8          //我司提供技术支持，任何技术问题欢迎随时交流学习
   9          //技术交流QQ群:2534656669
  10          //创建日期:2015/5/5
  11          //版本：V1.1
  12          //版权所有，盗版必究。
  13          //Copyright(C) 中景园电子
  14          //All rights reserved
  15          //All rights reserved
  16          //********************************************************************************
  17          
  18          /**************************************************************************************
  19          //=======================================液晶屏数据线接线==========================================//
  20          //P2组高8位数据口,DB8-DB15依次连接P2^0-P2^7;8位模式下只使用高8位
  21          #define  LCD_DataPortH P2 
  22          //P0组低8位数据口,DB0-DB7依次连接P0^0-P0^7;请确认P0口已经上拉10K电阻,不宜太小，最小4.7K,推荐10K.    
  23          #define  LCD_DataPortL P0     
  24          //=======================================液晶屏控制线接线==========================================//
  25          CS=P1^3;    //片选  
  26          RS=P1^2;      //数据/命令切换
  27          WR=P1^1;    //写控制
  28          RD=P1^0;    //读控制
  29          RESET=P3^3;   //复位 
  30          LCD_BL=P3^2;  //背光控制
  31          //=========================================触摸屏触接线=========================================//
  32          //不使用触摸或者模块本身不带触摸，则可不连接
  33          DCLK    =    P3^6; //触摸屏SPI总线时钟信号接P3.6  
  34          TCS       =    P3^7; //触摸片选TCS接P3.7
  35          DIN       =    P3^4; //MOSI接P3.4 
  36          DOUT      =    P3^5; //MISO接P3.5                                              
  37          Penirq    =    P4^0; //PEN引脚接P4.0，如单片机无P4组，请自行更改其他可用IO并修改代码定义
  38          **************************************************************************************************/ 
  39          
  40          //LCD的画笔颜色和背景色    
  41          u16 POINT_COLOR=0x0000; //画笔颜色
  42          u16 BACK_COLOR=0xFFFF;  //背景色 
  43          //管理LCD重要参数
  44          //默认为竖屏
  45          _lcd_dev lcddev;
  46          
  47          
  48          //******************************************************************
  49          //函数名：  LCD_WR_REG
  50          //作者：   中景园电子
  51          //日期：    2013-02-22
  52          //功能：    向液晶屏总线写入写16位指令
  53          //输入参数：Reg:待写入的指令值
  54          //返回值：  无
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 2   

  55          //修改记录：无
  56          //******************************************************************
  57          void LCD_WR_REG(int Reg)   
  58          { 
  59   1        LCD_RS=0;
  60   1        LCD_CS=0;
  61   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
                LCD_DataPortH=Reg;  
              #else //16位并行数据写入时序 
  64   1        LCD_DataPortH=Reg>>8; 
  65   1        LCD_DataPortL=Reg;  
  66   1      #endif
  67   1        LCD_WR=0;
  68   1        LCD_WR=1;
  69   1        LCD_CS=1;
  70   1      } 
  71          
  72          //******************************************************************
  73          //函数名：  LCD_WR_DATA
  74          //作者：   中景园电子
  75          //日期：    2013-02-22
  76          //功能：    向液晶屏总线写入写8位数据
  77          //输入参数：Data:待写入的数据
  78          //返回值：  无
  79          //修改记录：无
  80          //******************************************************************
  81           void LCD_WR_DATA(int Data)
  82          {
  83   1        LCD_RS=1;
  84   1        LCD_CS=0;
  85   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
                LCD_DataPortH=Data; 
              #else //16位并行数据写入时序 
  88   1        LCD_DataPortH=Data>>8;  
  89   1        LCD_DataPortL=Data; 
  90   1      #endif
  91   1        LCD_WR=0;
  92   1        LCD_WR=1;
  93   1        LCD_CS=1;
  94   1      }
  95          
  96          //******************************************************************
  97          //函数名：  LCD_WR_DATA_16Bit
  98          //作者：   中景园电子
  99          //日期：    2013-02-22
 100          //功能：    向液晶屏总线写入写16位数据
 101          //输入参数：Data:待写入的数据
 102          //返回值：  无
 103          //修改记录：无
 104          //******************************************************************
 105           void LCD_WR_DATA_16Bit(int Data)
 106          {
 107   1        LCD_RS=1;
 108   1        LCD_CS=0;
 109   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
                LCD_DataPortH=Data>>8;//高8位数据 
                LCD_WR=0;
                LCD_WR=1;
                LCD_DataPortH=Data; //低8位数据
                LCD_WR=0;
                LCD_WR=1;
              #else //16位并行数据写入时序 
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 3   

 117   1        LCD_DataPortH=Data>>8;  
 118   1        LCD_DataPortL=Data; 
 119   1        LCD_WR=0;
 120   1        LCD_WR=1;
 121   1      #endif
 122   1        LCD_CS=1;
 123   1      }
 124          
 125          //******************************************************************
 126          //函数名：  LCD_WriteReg
 127          //作者：   中景园电子
 128          //日期：    2013-02-22
 129          //功能：    写寄存器数据
 130          //输入参数：LCD_Reg:寄存器地址
 131          //      LCD_RegValue:要写入的数据
 132          //返回值：  无
 133          //修改记录：无
 134          //******************************************************************
 135          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 136          {
 137   1        LCD_WR_REG(LCD_Reg);
 138   1        LCD_WR_DATA(LCD_RegValue);
 139   1      }
 140          
 141          //******************************************************************
 142          //函数名：  LCD_WriteRAM_Prepare
 143          //作者：   中景园电子
 144          //日期：    2013-02-22
 145          //功能：    开始写GRAM
 146          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 147          //输入参数：无
 148          //返回值：  无
 149          //修改记录：无
 150          //******************************************************************
 151          void LCD_WriteRAM_Prepare(void)
 152          {
 153   1        LCD_WR_REG(lcddev.wramcmd);   
 154   1      }
 155          
 156          
 157          //******************************************************************
 158          //函数名：  LCD_Clear
 159          //作者：   中景园电子
 160          //日期：    2013-02-22
 161          //功能：    LCD全屏填充清屏函数
 162          //输入参数：Color:要清屏的填充色
 163          //返回值：  无
 164          //修改记录：无
 165          //******************************************************************
 166          void LCD_Clear(u16 Color)
 167          {
 168   1        u16 i,j;
 169   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 170   1          for(i=0;i<lcddev.width;i++)
 171   1         {
 172   2          for (j=0;j<lcddev.height;j++)
 173   2            {
 174   3                 LCD_WR_DATA_16Bit(Color);
 175   3            }
 176   2      
 177   2          }
 178   1      }
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 4   

 179          
 180          //******************************************************************
 181          //函数名：  LCD_DrawPoint
 182          //作者：   中景园电子
 183          //日期：    2013-02-22
 184          //功能：    在指定位置写入一个像素点数据
 185          //输入参数：(x,y):光标坐标
 186          //返回值：  无
 187          //修改记录：无
 188          //******************************************************************
 189          void LCD_DrawPoint(u16 x,u16 y)
 190          {
 191   1        LCD_SetWindows(x,y,x,y);//设置光标位置 
 192   1        LCD_WR_DATA_16Bit(POINT_COLOR);       
 193   1      }    
 194          
 195          //******************************************************************
 196          //函数名：  LCD_Reset
 197          //作者：   中景园电子
 198          //日期：    2013-02-22
 199          //功能：    LCD复位函数，液晶初始化前要调用此函数
 200          //输入参数：无
 201          //返回值：  无
 202          //修改记录：无
 203          //******************************************************************
 204          void LCD_Reset(void)
 205          {
 206   1        LCD_RESET=1;
 207   1        delay_ms(50); 
 208   1        LCD_RESET=0;
 209   1        delay_ms(50);
 210   1        LCD_RESET=1;
 211   1        delay_ms(50);
 212   1      }
 213          
 214          //******************************************************************
 215          //函数名：  LCD_Init
 216          //作者：   中景园电子
 217          //日期：    2013-02-22
 218          //功能：    LCD初始化
 219          //输入参数：无
 220          //返回值：  无
 221          //修改记录：无
 222          //******************************************************************
 223          void LCD_Init(void)
 224          {
 225   1        LCD_Reset(); //初始化之前复位
 226   1        LCD_RD=1;  //RD引脚没有用到，拉高处理
 227   1      
 228   1      //************* Start Initial Sequence **********//   
 229   1        LCD_WR_REG(0x11);
 230   1          delay_ms(100); //Delay 120ms
 231   1          LCD_WR_REG(0X36);// Memory Access Control
 232   1          if(USE_HORIZONTAL==0)LCD_WR_DATA(0x00);
 233   1          else if(USE_HORIZONTAL==1)LCD_WR_DATA(0xC0);
 234   1          else if(USE_HORIZONTAL==2)LCD_WR_DATA(0x70);
 235   1          else LCD_WR_DATA(0xA0);
 236   1          LCD_WR_REG(0X3A);
 237   1          LCD_WR_DATA(0X05);
 238   1        //--------------------------------ST7789S Frame rate setting-------------------------
 239   1      
 240   1          LCD_WR_REG(0xb2);
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 5   

 241   1          LCD_WR_DATA(0x0c);
 242   1          LCD_WR_DATA(0x0c);
 243   1          LCD_WR_DATA(0x00);
 244   1          LCD_WR_DATA(0x33);
 245   1          LCD_WR_DATA(0x33);
 246   1          LCD_WR_REG(0xb7);
 247   1          LCD_WR_DATA(0x35);
 248   1          //---------------------------------ST7789S Power setting-----------------------------
 249   1      
 250   1          LCD_WR_REG(0xbb);
 251   1          LCD_WR_DATA(0x35);
 252   1          LCD_WR_REG(0xc0);
 253   1          LCD_WR_DATA(0x2c);
 254   1          LCD_WR_REG(0xc2);
 255   1          LCD_WR_DATA(0x01);
 256   1          LCD_WR_REG(0xc3);
 257   1          LCD_WR_DATA(0x13);
 258   1          LCD_WR_REG(0xc4);
 259   1          LCD_WR_DATA(0x20);
 260   1          LCD_WR_REG(0xc6);
 261   1          LCD_WR_DATA(0x0f);
 262   1          LCD_WR_REG(0xca);
 263   1          LCD_WR_DATA(0x0f);
 264   1          LCD_WR_REG(0xc8);
 265   1          LCD_WR_DATA(0x08);
 266   1          LCD_WR_REG(0x55);
 267   1          LCD_WR_DATA(0x90);
 268   1          LCD_WR_REG(0xd0);
 269   1          LCD_WR_DATA(0xa4);
 270   1          LCD_WR_DATA(0xa1);
 271   1          //--------------------------------ST7789S gamma setting------------------------------
 272   1          LCD_WR_REG(0xe0);
 273   1          LCD_WR_DATA(0xd0);
 274   1          LCD_WR_DATA(0x00);
 275   1          LCD_WR_DATA(0x06);
 276   1          LCD_WR_DATA(0x09);
 277   1          LCD_WR_DATA(0x0b);
 278   1          LCD_WR_DATA(0x2a);
 279   1          LCD_WR_DATA(0x3c);
 280   1          LCD_WR_DATA(0x55);
 281   1          LCD_WR_DATA(0x4b);
 282   1          LCD_WR_DATA(0x08);
 283   1          LCD_WR_DATA(0x16);
 284   1          LCD_WR_DATA(0x14);
 285   1          LCD_WR_DATA(0x19);
 286   1          LCD_WR_DATA(0x20);
 287   1          LCD_WR_REG(0xe1);
 288   1          LCD_WR_DATA(0xd0);
 289   1          LCD_WR_DATA(0x00);
 290   1          LCD_WR_DATA(0x06);
 291   1          LCD_WR_DATA(0x09);
 292   1          LCD_WR_DATA(0x0b);
 293   1          LCD_WR_DATA(0x29);
 294   1          LCD_WR_DATA(0x36);
 295   1          LCD_WR_DATA(0x54);
 296   1          LCD_WR_DATA(0x4b);
 297   1          LCD_WR_DATA(0x0d);
 298   1          LCD_WR_DATA(0x16);
 299   1          LCD_WR_DATA(0x14);
 300   1          LCD_WR_DATA(0x21);
 301   1          LCD_WR_DATA(0x20);
 302   1          LCD_WR_REG(0x29); 
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 6   

 303   1      
 304   1        //设置LCD属性参数
 305   1        LCD_SetParam();//设置LCD参数   
 306   1        LCD_BL=1;//点亮背光  
 307   1      }
 308          /*************************************************
 309          函数名：LCD_SetWindows
 310          功能：设置lcd显示窗口，在此区域写点数据自动换行
 311          入口参数：xy起点和终点
 312          返回值：无
 313          *************************************************/
 314          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 315          { 
 316   1        LCD_WR_REG(lcddev.setxcmd); 
 317   1        LCD_WR_DATA(xStar>>8);
 318   1        LCD_WR_DATA(0x00FF&xStar);    
 319   1        LCD_WR_DATA(xEnd>>8);
 320   1        LCD_WR_DATA(0x00FF&xEnd);
 321   1      
 322   1        LCD_WR_REG(lcddev.setycmd); 
 323   1        LCD_WR_DATA(yStar>>8);
 324   1        LCD_WR_DATA(0x00FF&yStar);    
 325   1        LCD_WR_DATA(yEnd>>8);
 326   1        LCD_WR_DATA(0x00FF&yEnd); 
 327   1      
 328   1        LCD_WriteRAM_Prepare(); //开始写入GRAM        
 329   1      }   
 330          
 331          /*************************************************
 332          函数名：LCD_SetCursor
 333          功能：设置光标位置
 334          入口参数：xy坐标
 335          返回值：无
 336          *************************************************/
 337          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 338          {               
 339   1        LCD_WR_REG(lcddev.setxcmd); 
 340   1        LCD_WR_DATA(Xpos>>8);
 341   1        LCD_WR_DATA(0x00FF&Xpos);   
 342   1      
 343   1        
 344   1        LCD_WR_REG(lcddev.setycmd); 
 345   1        LCD_WR_DATA(Ypos>>8);
 346   1        LCD_WR_DATA(0x00FF&Ypos);   
 347   1      
 348   1        LCD_WriteRAM_Prepare(); //开始写入GRAM  
 349   1      } 
 350          
 351          //设置LCD参数
 352          //方便进行横竖屏模式切换
 353          void LCD_SetParam(void)
 354          {   
 355   1        lcddev.wramcmd=0x2C;
 356   1      //#if USE_HORIZONTAL==0 //使用竖屏 
 357   1      //  lcddev.dir=0;//竖屏             
 358   1      //  lcddev.width=240;
 359   1      //  lcddev.height=320;
 360   1      //  lcddev.setxcmd=0x2A;
 361   1      //  lcddev.setycmd=0x2B;  
 362   1      //  LCD_WriteReg(0x36,0x00);
 363   1      
 364   1      //#else if USE_HORIZONTAL==1//横屏   
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 7   

 365   1      //  lcddev.dir=1;//横屏
 366   1      //  lcddev.width=320;
 367   1      //  lcddev.height=240;
 368   1      //  lcddev.setxcmd=0x2A;
 369   1      //  lcddev.setycmd=0x2B;      
 370   1      //  LCD_WriteReg(0x36,0xc0);
 371   1      //#else if USE_HORIZONTAL==2//竖屏   
 372   1      //  lcddev.dir=1;//竖屏
 373   1      //  lcddev.width=240;
 374   1      //  lcddev.height=320;
 375   1      //  lcddev.setxcmd=0x2A;
 376   1      //  lcddev.setycmd=0x2B;      
 377   1      //  LCD_WriteReg(0x36,0x70);
 378   1      //#else USE_HORIZONTAL==3//横屏  
 379   1      //  lcddev.dir=1;//横屏
 380   1      //  lcddev.width=320;
 381   1      //  lcddev.height=240;
 382   1      //  lcddev.setxcmd=0x2A;
 383   1      //  lcddev.setycmd=0x2B;      
 384   1      //  LCD_WriteReg(0x36,0xA0);
 385   1          switch(USE_HORIZONTAL)
 386   1          {
 387   2            case 0:
 388   2            lcddev.width=240;
 389   2            lcddev.height=320;
 390   2            lcddev.setxcmd=0x2A;
 391   2            lcddev.setycmd=0x2B;      
 392   2            LCD_WriteReg(0x36,0x00);
 393   2            break;  
 394   2            case 1:
 395   2            lcddev.width=320;
 396   2            lcddev.height=240;
 397   2            lcddev.setxcmd=0x2A;
 398   2            lcddev.setycmd=0x2B;      
 399   2            LCD_WriteReg(0x36,0x70); 
 400   2            break;      
 401   2            case 2:
 402   2            lcddev.width=240;
 403   2            lcddev.height=320;
 404   2            lcddev.setxcmd=0x2A;
 405   2            lcddev.setycmd=0x2B;      
 406   2            LCD_WriteReg(0x36,0xc0);
 407   2            break;
 408   2            default:
 409   2            lcddev.width=320;
 410   2            lcddev.height=240;
 411   2            lcddev.setxcmd=0x2A;
 412   2            lcddev.setycmd=0x2B;      
 413   2            LCD_WriteReg(0x36,0xa0);
 414   2            break;      
 415   2          }
 416   1      //#endif
 417   1      }
 418          
 419          
 420          
 421          
 422          
*** WARNING C294 IN LINE 235 OF LCD\LCD.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.52.0.0   LCD                                                               08/08/2021 18:49:23 PAGE 8   

   CODE SIZE        =    964    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
